{
  "hash": "51fef755b8c0c5c7ba8e348b21a4a53d",
  "result": {
    "markdown": "---\ntitle: \"Formation R - Collection de packages tidyverse\"\nauthor: \n  - Monique Simier, monique.simier@ird.fr \n  - Laure Velez, laure.velez@umontpellier.fr\n  - Gael Mariani, gael.mariani@umontpellier.fr\n  - Mathieu Depetris, mathieu.depetris@ird.fr\ndate: last-modified\t\ndate-format: DD/MM/YYYY\nformat: \n  revealjs:\n    target: \"_blank\"\n    scrollable: true\n    slide-number: c/t\n    chalkboard: true\n    title-slide-attributes:\n      data-background-image: images/background_title.png\n      data-background-size: cover  \n    theme: template/theme_perso.scss\n    logo: template/logo_marbec.png\n    footer: \"[https://github.com/umr-marbec/tidyverse-training](https://github.com/umr-marbec/tidyverse-training)\"\neditor: visual\nfig-caption: center\n---\n\n\n\n\n## Plan de la formation {.smaller}\n\n-   Préambule et introduction\n\n    -   Prérequis et environnement de travail nécessaire à la formation\n    -   Objectifs de la formation\n    -   Présentation de tidyverse\n\n-   Partie I : Manipulation de données avec dplyr\n\n-   Partie II : Extension à la manipulation de données, cas spécifiques\n\n    -   Manipuler du texte avec stringr\n    -   Manipuler des dates avec lubridate\n\n-   Partie III : Visualisation graphique avec ggplot2\n\n-   Partie IV : Cas pratiques sur vos données\n\nFormation fortement inspirée du site de [Joseph Larmarange](https://larmarange.github.io/analyse-R/){target=\"_blank\"}\n\n# Préambule et introduction\n\n-   Prérequis et environnement de travail nécessaire à la formation\n-   Objectifs de la formation\n-   Présentation de tidyverse\n\n## Prérequis et environnement de travail nécessaire à la formation\n\n-   Avoir des notions de base dans l'utilisation de R\n-   Avoir une instance valide de [R](https://cran.r-project.org/){target=\"_blank\"} sur son poste (durant la formation utilisation de la version 4.2.1)\n-   Avoir installé correctement les versions des packages dplyr (utilisation de la version 1.0.10), lubridate (utilisation de la version 1.8.0), ggp- lot2 (utilisation de la version 3.3.6) et stringr (utilisation de la version 1.4.1)\n\n## Bonus non obligatoire\n\n-   Utilisation de l'environnement de développement [Rstudio](https://www.rstudio.com/products/rstudio/download/){target=\"_blank\"} (utilisation de la version 2022.07.1 Build 554 sous Windows)\n-   Pour les utilisateurs de Windows installation de [Rtools](https://cran.r-project.org/bin/windows/Rtools/){target=\"_blank\"} (utilisation de la version 4.2)\n-   Installation de [Visual Studio Code](https://code.visualstudio.com/#alt-downloads){target=\"_blank\"} (éditeur de code source autonome)\n-   Une instance de [Java](https://jdk.java.net/19/){target=\"_blank\"} (idéalement une version JDK = kit de développement + moteur d'exécution des programmes compilés + outils de compilation)\n\n## Objectifs de la formation\n\n::: columns\n::: {.column width=\"60%\"}\n-   Vous présenter un panel de ce que l'on peut faire avec ces nouvelles méthodes et surtout vous donner les clés pour aller plus loin\n-   Un expert n'est pas forcément quelqu'un qui connaît toutes les fonctions de R par cœur, mais qui sait écoute, comprendre et aller chercher les informations dont il a besoin\n    -   Pensez à jeter un coup d'œil aux [cheatsheets](https://github.com/rstudio/cheatsheets){target=\"_blank\"}\n-   Prendre le temps de discuter et de regarder vos données et/ou problèmes\n:::\n\n::: {.column width=\"40%\"}\n![](images/loi_pareto.jpg)\n:::\n:::\n\n## Présentation de Tidyverse {.smaller}\n\n::: columns\n::: {.column width=\"65%\"}\n-   Tidyverse c'est quoi ?\n    -   tidy + universe ou l'univers du «bien rangé» ou du rangement\n    -   Collection d'extensions conçues pour travailler ensemble et basées sur une philosophie commune\n    -   Le cœur du package inclut 8 packages\n        -   [ggplot2](https://ggplot2.tidyverse.org/){target=\"_blank\"} : création de graphiques\n        -   [dplyr](https://dplyr.tidyverse.org/){target=\"_blank\"} : manipulation de données au sens large\n        -   [tidyr](https://tidyr.tidyverse.org/){target=\"_blank\"} : manipulation de données plus orientées variables\n        -   [readr](https://readr.tidyverse.org/){target=\"_blank\"} : import\n        -   [purrr](https://purrr.tidyverse.org/){target=\"_blank\"} : fonction de vectorisation (remplacement des boucles classiques)\n        -   [tibble](https://tibble.tidyverse.org/){target=\"_blank\"} : «évolution» du data.frame\n        -   [stringr](https://stringr.tidyverse.org/){target=\"_blank\"} : manipulation de caractère\n        -   [forcats](https://forcats.tidyverse.org/){target=\"_blank\"} : série d'outils pour aider dans la manipulation des facteurs\n:::\n\n::: {.column width=\"35%\"}\n![](images/hadley_wickham.png){width=\"55%\"} ![](images/tidyverse_packages.png){width=\"55%\"}\n:::\n:::\n\n## Présentation de Tidyverse\n\n-   Lancement de la librairie\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n:::\n\n\n-   Cependant je vous déconseille de faire comme ça\n    -   En lançant cette commande, on charge dans R tous les packages associés à tidyverse (les 8 packages cités précédemment, mais aussi les dépendances associées)\n    -   Avez-vous vraiment besoin de tout cela ?\n    -   Potentiel impact sur vos futurs développements (surtout si vous commencez à développer des packages)\n    -   L'idée est d'appliquer dès maintenant les bonnes pratiques et surtout de comprendre ce que cela implique de ne pas les suivre (ce qui est aussi votre droit !)\n\n## Avant d'aller plus loin\n\n-   L'utilisation de ces packages permet de faire beaucoup de choses, mais ne rend pas tout le reste obsolète\n-   Il y a plusieurs stratégies pour réaliser une action, il faut juste trouver le bon compromis (connaissances, temps de calcul, contexte global de votre projet, ...)\n-   Attention aux règles et conventions de nommages\n    -   Règles pour nommer une variable (obligatoire) : ne pas commencer par un chiffre, pas d'espace, que des caractères alpha-numériques (A-z, 0-9) et le tiret du bas (\\_), ne pas utiliser de mots réservés (comme par exemple TRUE)\n    -   Conventions pour nommer une variable (recommandé) : uniquement des lettres minuscules, séparer les mots des \\_ et les noms choisis doivent pouvoir donner l'information du contenu associé\n\n# Partie I : Manipulation de données avec dplyr\n\n# Importation de données sous R avec readr\n\n-   Des fonctions de base de R sont dédiées à l'import de fichiers textes de type csv (read.csv) ou avec séparateurs tabulation (read.table)\n-   La librairie readr propose des fonctions similaires sur le principe mais qui diffèrent des fonctions de base sur certains aspects\n-   Elles sont compatibles avec l'esprit Tidyverse car elles permettent de générer des tibbles \\# Partie III : Visualisation des données avec ggplot\n\n## Petit apperçu des possibilités :\n\n::: {layout-ncol=\"3\"}\n![Nuage de points](images/.png){width=\"\\\"30%\"}\n\n![Boxplots](images/.png){width=\"30%\"}\n\n![Violin Plot](images/.png){width=\"30%\"}\n:::\n\n<center>Un grand notre d'exemples est disponible sur le site [***from Data to Viz***](https://www.data-to-viz.com/)</center>\n\n## Petit apperçu des possibilités :\n\n::: {layout-ncol=\"3\"}\n![Barplot](images/.png){width=\"30%\"}\n\n![Barplot Circulaire](images/Figure3.png){width=\"30%\"}\n\n![Diagramme empilé](images/.png){width=\"30%\"}\n:::\n\n<center>Un grand notre d'exemples est disponible sur le site [***from Data to Viz***](https://www.data-to-viz.com/)</center>\n\n## Ggplot c'est comme la chirurgie *`aes`*thétique :\n\n::: incremental\n::: columns\n1)  Les jeunes s'y mettent très tôt !\n\n2)  Les moins jeunes sont réticents puis CERTAINS finissent par s'y mettre\n\n    <center>![](images/nancy_pelosi.jpg){width=\"20%\"}</center>\n\n3)  C'est un enchainement plus ou moins long d'opérations.\n\n    <center>![](images/bogdanoff1.jpg){width=\"21%\"}![](images/bogdanoff1.5.jpg){width=\"25%\"}![](images/bogdanoff2.jpg){width=\"25%\"}</center>\n:::\n:::\n\n## Ggplot, une succession de couches\n\n::: incremental\n::: columns\n<div>\n\n::: {.column width=\"45%\"}\n1.  La Structure\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](tidyverse-training_files/figure-revealjs/unnamed-chunk-4-1.png){width=85%}\n    :::\n    :::\n\n:::\n\n::: {.column width=\"45%\"}\n2.  Le type de représentation\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](tidyverse-training_files/figure-revealjs/unnamed-chunk-6-1.png){width=85%}\n    :::\n    :::\n\n:::\n\n</div>\n\n::: columns\n::: {.column width=\"45%\"}\n3.  Les Couleurs\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](tidyverse-training_files/figure-revealjs/unnamed-chunk-8-1.png){width=85%}\n    :::\n    :::\n\n:::\n\n::: {.column width=\"45%\"}\n4.  Le Lifting final\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](tidyverse-training_files/figure-revealjs/unnamed-chunk-10-1.png){width=85%}\n    :::\n    :::\n\n:::\n:::\n:::\n:::\n\n## La structure des données\n\nA FAIRE\n\n## Ggplot pas à pas\n\n### 1. Construction de la structure\n\nPour la structure du la figure, la fonction à toujours utiliser est `ggplot2::ggplot()` . Les arguments principaux sont :\n\n::: incremental\n1.  `data = nom.du.dataframe`\n\n2.  `mapping = aes(x = varaible.x, y = variable.y)`\n\n    ::: incremental\n    -   Ici le `aes` signifie **aesthetic**\n\n    -   On verra que d'autres options sont disponibles dans `aes` comme la taille (`size`), la couleur (`color`), la forme (`shape`) ...\n    :::\n\n3.  Mise en application\n\n\n    ::: {.cell warnings='false'}\n    \n    :::\n\n    ::: {.cell warnings='false'}\n    \n    ```{.r .cell-code}\n    p1 <- ggplot2::ggplot(data    = fish_data,\n                          mapping = ggplot2::aes(x = total, y = biomass))\n    p1\n    ```\n    \n    ::: {.cell-output-display}\n    ![](tidyverse-training_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n    :::\n    :::\n\n:::\n\n## Ggplot pas à pas\n\n### 2. Choix du type de représentation\n\n::: incremental\nPlusieurs représentations existent, les plus connues et utilisées sont :\n\n-   `ggplot2::geom_point()` pour un nuage de points\n-   `ggplot2::geom_line()` pour une ligne\n-   `ggplot2::geom_boxplot()` pour une boîte à moustache\n-   `ggplot2::geom_col()` pour un diagramme en barres\n-   `ggplot2::geom_histogram()` pour un histogramme\n\nConstruisons un nuage de points entre nos deux variables:\n\n::: incremental\n::: columns\n::: {.column width=\"45%\"}\n-   `aes()` dans `ggplot()`\n\n\n    ::: {.cell warnings='false'}\n    \n    ```{.r .cell-code}\n    p2 <- p1 + \n      ggplot2::geom_point()\n    ```\n    :::\n\n:::\n\n::: {.column width=\"45%\"}\n-   `aes()` dans `geom_point()`\n\n\n    ::: {.cell warnings='false'}\n    \n    ```{.r .cell-code}\n    p2 <- ggplot2::ggplot() +\n      ggplot2::geom_point(data    = fish_data,\n                          mapping = ggplot2::aes(x = total, \n                                                 y = biomass))\n    ```\n    :::\n\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n:::\n:::\n:::\n\n## Ggplot pas à pas\n\n3.  Mettons un peu de couleurs\n\n    =\\> Une couleur par ordre. Comme c'est lié à l'esthétisme de la figure, on utilise l'argument `color` dans la fonction `aes`.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\np3 <- ggplot2::ggplot() +\n  ggplot2::geom_point(data    = fish_data,\n                      mapping = ggplot2::aes(x = total, y = biomass, \n                                             color = class))\np3\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## Ggplot pas à pas\n\n4.  Modifions les couleurs des points + Le titre de la légende\n\n    Pour cela, on peut utiliser la fonction `scale_color_manual()` et les arguments `name` et `values`.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\np4 <- p3 +\n  ggplot2::scale_color_manual(name = \"Order :\",\n                              values = c(\"darkblue\", \"darkgreen\"))\np4\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n<center>Il y a de multiples façons de modifier le titre de la légende. Ici on profite de l'utilisation de la fonction `scale_color_manual()` pour utiliser l'arguement `name`.\\\nUne autre façon de faire est d'utiliser la fonction `labs` qui permet de changer les diverses légendes (axes x et y + légende de couleur). A vous de jouer !!!</center>\n\n## Ggplot pas à pas\n\n5.  Nommons proprement les axes + la légende\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\np5 <- p3 +\n  ggplot2::labs(x = \"Number of observations\", \n                y = \"Biomass (g)\", \n                color = \"Order :\")\np5\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n## Ggplot pas à pas\n\n6.  Petit lifting de la couleur de font\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\np5 + ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n\n```{.r .cell-code}\np5 + ggplot2::theme_classic()\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-28-2.png){width=960}\n:::\n\n```{.r .cell-code}\np5 + ggplot2::theme_dark()\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-28-3.png){width=960}\n:::\n:::\n\n\n<center>Un tas de `theme_*` existent pour obtenir différentes formats d'arrière plan (voir [ici](http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements)). A vous de choisir votre préféré.</center>\n\n## Ggplot pas à pas\n\n7.  Le lifting final sur les légendes\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\np6 <- p5 +\n  ggplot2::theme(axis.text       = ggplot2::element_text(size = 11),\n                 axis.title      = ggplot2::element_text(size = 13),\n                 legend.position = c(0.2, 0.8),\n                 legend.text     = ggplot2::element_text(size = 13),\n                 legend.title    = ggplot2::element_text(size = 15))\np6\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n## Une petite subtilité concernant les couleurs\n\n::: incremental\n***Exercice :***\n\n1.  Construire un diagramme en barres représentant la biomasse de chacun des ordres.\n2.  Donner une couleur à chacune des barres. Vous devez choisir la couleur.\n:::\n\n::: incremental\nGgplot fait la différence entre :\n\n-   la couleur des contours -\\> `color = …`\n\n-   la couleur de remplissage -\\> `fill = …`\n\nDe la même façon, pour choisir ses couleurs de contour *vs.* de remplissage, on utilise les fonctions\\\n`scale_color_manual()` *vs.* `scale_fill_manual()`.\n:::\n\n::: incremental\n\n::: {.cell}\n\n```{.r .cell-code}\nfish_data %>%\n  dplyr::group_by(order) %>%\n  dplyr::summarise(biomass = sum(biomass)) %>%\n  ggplot2::ggplot() +\n  ggplot2::geom_col(data    = fish_data,\n                    mapping = ggplot2::aes(x = order, \n                                           y = biomass, \n                                           fill = order)) +\n  ggplot2::scale_fill_manual(values = c(\"pink\", \"green\", \"red\", \"blue\", \"yellow\"))\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n:::\n\n## Une autre subtilité concernant les couleurs\n\nSelon le type de variable, les fonctions pour choisir les couleurs ne seront pas les mêmes. Pourquoi ?\n\n::: incremental\n***Exercice :***\n\n1.  Construisez un nuage de points biomass\\~total\n2.  Coloriez les points en fonction de la variable abondance en BLEU.\n:::\n\n::: incremental\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- ggplot2::ggplot() +\n  ggplot2::geom_point(data    = fish_data,\n                      mapping = ggplot2::aes(x = total, y = biomass, \n                                             color = total))\nplot + ggplot2::scale_color_manual(values = \"blue\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: Continuous value supplied to discrete scale\n```\n:::\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n:::\n\n<center>On ne peut pas donner une seule couleur à une variable continue !</center>\n\n## Couleurs & variables continues\n\nIl existe 4 fonctions principales qui permettent de construire des pallettes de couleurs continues :\n\n::: incremental\n-   `scale_fill_contiuous` : avec une palette par defaut (nuances de bleus)\n\n-   `scale_fill_viridis_c` : Colorblind friendly.\n\n-   `scale_fill_distiller` : utilise les [BrewerPalettes](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3) (voir [ici](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html) pour plus d'infos).\\\n    Pour voir les palettes =\\> `RColorBrewer::display.brewer.all()`\n\n-   `scale_fill_gradient` : permet de créer ses propres gradients de couleurs. Des variantes existent selon le nombre de couleurs à définir. Il s'agit de `scale_fill_gradient2()` et `scale_fill_gradientn()`.\n:::\n\n::: incremental\n<center>Testons les une par une à partir de la figure suivante</center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- ggplot2::ggplot(faithfuld) +\n  ggplot2::geom_tile(ggplot2::aes(waiting, eruptions, fill = density)) +\n  ggplot2::labs(x = \"Waiting\", y = \"Eruptions\", fill = \"Density\") +\n  ggplot2::theme_bw()\n```\n:::\n\n:::\n\n## `scale_color_continuous`\n\nLa plus simple, mais pas beaucoup d'options.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-38-1.png){width=960}\n:::\n:::\n\n\n## `scale_color_viridis_c`\n\nDe belles palettes dont les nuances sont captées par les personnes albinos.\n\n::: incremental\n\n::: {.cell}\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_viridis_c(option = \"viridis\")\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-40-1.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_viridis_c(option = \"inferno\")\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-40-2.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_viridis_c(option = \"turbo\")\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-40-3.png){width=960}\n:::\n:::\n\n:::\n\n## `scale_color_distiller()`\n\nPermet d'utiliser les palettes de couleurs issues de [BrewerPalettes](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-42-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-42-2.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-42-3.png){width=960}\n:::\n:::\n\n\n::: incremental\nPetite info utile, toutes les palettes peuvent passer le test **ColorBlind Friendly** :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"colorBlindness\")\n# install.packages(\"RColorBrewer\")\n\ncolor_pal <- RColorBrewer::brewer.pal(10, name=\"Spectral\")\ncolorBlindness::displayAllColors(color_pal)\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-44-1.png){width=960}\n:::\n:::\n\n:::\n\n## `scale_fill_gradient()`\n\nPermet de créer ces propres palettes de couleurs, à partir de 2, 3 ou n couleurs :\n\n::: incremental\n-   `scale_fill_gradient()` avec les arguments `low` et `high`.\n\n-   `scale_fill_gradient2()` avec les arguments `low`, `mid` et `high`.\n\n-   `scale_fill_gradientn()` avec l'argument `colours`.\n:::\n\n::: incremental\n\n::: {.cell}\n\n```{.r .cell-code}\nplot + scale_fill_gradient(low = \"darkblue\", high = \"darkred\")\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-46-1.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + scale_fill_gradient2(low = \"darkblue\", mid = \"white\", high = \"darkred\", midpoint = 0.02)\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-46-2.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + scale_fill_gradientn(colours = colorspace::diverge_hcl(7))\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-46-3.png){width=960}\n:::\n:::\n\n:::\n\n## Couleurs & variables discrètes\n\nLes principales fonctions utilisées permettant de construire des pallettes de couleurs continues :\n\n::: incremental\n-   `scale_fill_discrete` : Couleurs par défaut\n\n-   `scale_fill_manual` : choix de la couleur parmis toutes les couleurs existantes.\n\n-   `scale_fill_brewer` : utilise les [BrewerPalettes](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3) (voir [ici](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html) pour plus d'infos). Equivalent de `scale_fill_distiller` pour les variables discrètes.\n:::\n\n::: incremental\n\n::: {.cell}\n\n:::\n\n:::\n\n::: incremental\n\n::: {.cell}\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_discrete()\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-50-1.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_manual(values = c(\"pink\", \"green\", \"red\", \"blue\", \"yellow\"))\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-50-2.png){width=960}\n:::\n\n```{.r .cell-code}\nplot + ggplot2::scale_fill_brewer(palette = \"Set2\") \n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-50-3.png){width=960}\n:::\n:::\n\n:::\n\n## Couleurs & variables en classes\n\n## Ressources utilisées\n\nhttps://ggplot2-book.org/scale-colour.html#colour-discrete\n\nhttps://stackoverflow.com/questions/70942728/understanding-color-scales-in-ggplot2\n\nhttps://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3\n\n## Utiliser ggplot pour détecter des erreurs dans les données\n\n<center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfish_data <- readr::read_csv(\"data/Global_reef_fish_abundance_and_biomass.csv\")\n\n# Selection des données pour le site n°2000951\nsite1 <- fish_data %>%\n  dplyr::filter(survey_id == 2000951) %>%\n  dplyr::select(survey_id, class, order, family, species_name, total, biomass)\n\nsite1 %>%\n  head(5) %>% \n  kableExtra::kbl(digits = 4, caption = \"Data to check\") %>% \n  kableExtra::kable_classic(html_font = \"Computer Modern\", full_width = F)  \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style=\"font-family: Computer Modern; width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Data to check</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> survey_id </th>\n   <th style=\"text-align:left;\"> class </th>\n   <th style=\"text-align:left;\"> order </th>\n   <th style=\"text-align:left;\"> family </th>\n   <th style=\"text-align:left;\"> species_name </th>\n   <th style=\"text-align:right;\"> total </th>\n   <th style=\"text-align:right;\"> biomass </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2000951 </td>\n   <td style=\"text-align:left;\"> Actinopterygii </td>\n   <td style=\"text-align:left;\"> Perciformes </td>\n   <td style=\"text-align:left;\"> Chironemidae </td>\n   <td style=\"text-align:left;\"> Chironemus marmoratus </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 201.7886 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2000951 </td>\n   <td style=\"text-align:left;\"> Actinopterygii </td>\n   <td style=\"text-align:left;\"> Perciformes </td>\n   <td style=\"text-align:left;\"> Chironemidae </td>\n   <td style=\"text-align:left;\"> Chironemus marmoratus </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 301.2770 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2000951 </td>\n   <td style=\"text-align:left;\"> Actinopterygii </td>\n   <td style=\"text-align:left;\"> Perciformes </td>\n   <td style=\"text-align:left;\"> Dinolestidae </td>\n   <td style=\"text-align:left;\"> Dinolestes lewini </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 190.6464 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2000951 </td>\n   <td style=\"text-align:left;\"> Actinopterygii </td>\n   <td style=\"text-align:left;\"> Perciformes </td>\n   <td style=\"text-align:left;\"> Kyphosidae </td>\n   <td style=\"text-align:left;\"> Atypichthys strigatus </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 27.6482 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2000951 </td>\n   <td style=\"text-align:left;\"> Actinopterygii </td>\n   <td style=\"text-align:left;\"> Perciformes </td>\n   <td style=\"text-align:left;\"> Kyphosidae </td>\n   <td style=\"text-align:left;\"> Atypichthys strigatus </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 129.9803 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n</center>\n\nComment détécter les outliers ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(data = site1, mapping = ggplot2::aes(x = order, y = biomass)) +\n  ggplot2::geom_boxplot() +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-54-1.png){width=960}\n:::\n:::\n\n\n### Séparer les Elasmobranches des Actinoptérygiens\n\n<center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(data = site1, mapping = ggplot2::aes(x = order, y = biomass)) +\n  ggplot2::geom_boxplot() +\n  ggplot2::facet_grid(.~class, scales = \"free\", space = \"free\") +\n  ggplot2::theme_bw() +\n  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-56-1.png){width=960}\n:::\n:::\n\n\nInterrogation au niveau des perciformes ...\n\n</center>\n\n### Qu'est-ce qu'il se passe avec les Perciformes ?\n\n<center>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsite1 %>%\n  dplyr::filter(order == \"Perciformes\") %>%\n  ggplot2::ggplot(., mapping = ggplot2::aes(x = family, y = biomass)) +\n  ggplot2::geom_boxplot() +\n  ggplot2::theme_bw() +\n  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](tidyverse-training_files/figure-revealjs/unnamed-chunk-58-1.png){width=960}\n:::\n:::\n\n\n</center>\n",
    "supporting": [
      "tidyverse-training_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"tidyverse-training_files/libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"tidyverse-training_files/libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}